<h2 class="mb-6 text-2xl font-bold">Why PhoenixNotif?</h2>

<div class="mb-12 space-y-4">
  <p><.link class="text-blue-700 hover:text-blue-500 underline" href={"https://hexdocs.pm/phoenix/controllers.html#flash-messages"}>The existing flash system</.link> in Phoenix has a few limitations:</p>

  <ol class="list-disc list-inside ml-4">
    <li class="mt-3">You can't have multiple flash messages of the same type open at the same time.</li>
    <li class="mt-3">The default styles need a new coat of paint.</li>
  </ol>
</div>

<div class="mb-12 space-y-4">
  <h2 class="text-lg font-semibold mb-3">Creating a Toast component</h2>

  <p>
    Creating your own toast component with Phoenix LiveView is a relatively trivial task. You can make a Phoenix.LiveComponent that maintains a list of toasts in memory, and use send/1 to send messages directly to it, or use update/3 to update it's assigns directly. Either way is ok.
  </p>

  <p>
    Because it's a relatively simple task, it's may not be worth it as a library, but what if you have existing flash messages too? Odds are, if you build your own toast system, you'll want to either make your flashes look the same, or get rid of them and switch everything over to your new toast system.
  </p>

  <p>
    PhoenixNotif has a solution for this situation: it just ships with the ability to override both your flash messages and provide a new toast system with the benefits that brings (more than one message per kind, etc).
  </p>
</div>
